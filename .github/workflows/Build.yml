name: Build

env:
  Solution: .
  Platform: #Any CPU|Win32|x64
  Configuration: Release
  Artifacts: build/$Configuration
  Branch: $env:GITHUB_REF_NAME
  
on:
  push:
    Branches: $Branch
  pull_request:
    Branches: $Branch
  workflow_dispatch:

permissions:
  contents: write

jobs:
  Windows:
    runs-on: windows-2022
    steps:

    - name: Clone repo and submodules
      run: git clone --recurse-submodules https://github.com/${{github.repository}}.git .
    - name: Clone ReShade
      run: git clone --recurse-submodules https://github.com/crosire/reshade.git ../../reshade

    - name: Get current date, commit hash and count
      run: |
        echo "CurrentDate=$(date +'%Y-%m-%d')" >> $env:GITHUB_ENV
        echo "CommitHashShort=$(git rev-parse --short=7 HEAD)" >> $env:GITHUB_ENV
        echo "CommitCount=$(git rev-list --count $env:GITHUB_REF_NAME)" >> $env:GITHUB_ENV

    - name:  Config
      run:   echo "DXSDK_DIR=%APPDATA%/cache/DXSDK" >> $env:GITHUB_ENV
    
    - name: Cache
      id:   cache
      uses: actions/cache@v1
      with:
       path: "${{env.DXSDK_DIR}}"
       key:  DXSDK

    - name: Set up DirectX SDK
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        curl -L https://download.microsoft.com/download/a/e/7/ae743f1f-632b-4809-87a9-aa1bb3458e31/DXSDK_Jun10.exe -o DXSDK_Jun10.exe
        7z x DXSDK_Jun10.exe DXSDK/Include -o${{env.DXSDK_DIR}}/Include
        7z x DXSDK_Jun10.exe DXSDK/Lib/x86 -o${{env.DXSDK_DIR}}/Lib/x86
        rm -fR _DX*_ _DX*_.exe
      shell: bash

#    - name: Install DirectX SDK
#      shell: powershell
#      run: |
#        Write-Host "DirectX Software Development Kit..." -ForegroundColor Cyan
#        Write-Host "Downloading..."
#        $exePath = "$env:temp\DXSDK_Jun10.exe"
#        (New-Object Net.WebClient).DownloadFile('https://download.microsoft.com/download/A/E/7/AE743F1F-632B-4809-87A9-AA1BB3458E31/DXSDK_Jun10.exe', $exePath)
#        Write-Host "Installing..."
#        $installPath = "C:\Program Files (x86)\Microsoft DirectX SDK (June 2010)"
#        cmd /c start /wait $exePath /P $installPath /U
#        Write-Host "Installed" -ForegroundColor Green#

#        Invoke-WebRequest https://download.microsoft.com/download/a/e/7/ae743f1f-632b-4809-87a9-aa1bb3458e31/DXSDK_Jun10.exe -OutFile DXSDK_Jun10.exe
#        Start-Process -Wait DXSDK_Jun10.exe -ArgumentList '/U', '/P "C:\Program Files (x86)\Microsoft DirectX SDK (June 2010)"'
#        $env:PATH += ";C:\Program Files (x86)\Microsoft DirectX SDK (June 2010)\Include"





    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.Solution}}

    - name: Build
      run: msbuild /m ${{env.Solution}} /p:IncludePaths="${{env.DXSDK_DIR}}\Include" /p:AdditionalIncludePaths="${{github.workspace}}\..\..\reshade\include"
      #run: msbuild /m /p:Configuration="${{env.Configuration}}" /p:Platform="${{env.Platform}}" ${{env.Solution}}

    - name: Upload Installer Artifact to GitHub
      uses: actions/upload-artifact@v2
      with:
        name: "${{github.event.repository.name}}_r${{env.CommitCount}}@${{env.CommitHashShort}}"
        path: "${{github.workspace}}/${{env.Artifacts}}/"

    - name: Compress artifacts
      uses: vimtor/action-zip@v1.1
      with:
        files: '${{env.Artifacts}}/'
        dest: "build/${{github.event.repository.name}}_r${{env.CommitCount}}@${{env.CommitHashShort}}.zip"

    - name: GitHub pre-release
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{secrets.GITHUB_TOKEN}}"
        automatic_release_tag: "latest"
        prerelease: true
        title: "[${{env.CurrentDate}}] ${{github.event.repository.name}} r${{env.CommitCount}}@${{env.CommitHashShort}}"
        files: "build/${{github.event.repository.name}}_r${{env.CommitCount}}@${{env.CommitHashShort}}.zip"
